import os
import streamlit as st
import pandas as pd
import datetime
import shutil
from logger import get_stats, get_top_queries, get_recent_queries
from build_vectorstore import build_vector_store

st.set_page_config(
    page_title="–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å | –°–∞–ª–æ–Ω –∫—Ä–∞—Å–∏ AI",
    page_icon="‚öôÔ∏è",
    layout="wide",
)


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
def authenticate():
    """–ê—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ"""
    if "authenticated" not in st.session_state:
        st.session_state.authenticated = False

    if st.session_state.authenticated:
        return True

    st.title("üîí –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è")
    st.subheader("–í—Ö—ñ–¥ –¥–æ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ —Å–∞–ª–æ–Ω—É –∫—Ä–∞—Å–∏ ¬´ESTHEIQUE¬ª")

    admin_password = os.getenv("ADMIN_PASSWORD", "admin123")  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, –∫—Ä–∞—â–µ –∑–º—ñ–Ω–∏—Ç–∏ —É .env

    password = st.text_input("–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞", type="password", key="admin_password")
    
    if st.button("–£–≤—ñ–π—Ç–∏", key="login_button"):
        if password == admin_password:
            st.session_state.authenticated = True
            st.success("‚úÖ –£—Å–ø—ñ—à–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è! –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É...")
            st.rerun()
        else:
            st.error("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
            st.session_state.authenticated = False

    st.info("–¶—è –ø–∞–Ω–µ–ª—å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∞ –ª–∏—à–µ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Å–∞–ª–æ–Ω—É. –Ø–∫—â–æ —É –≤–∞—Å –Ω–µ–º–∞—î –ø–∞—Ä–æ–ª—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞.")
    st.stop()  # –ó—É–ø–∏–Ω—è—î–º–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥–æ —É—Å–ø—ñ—à–Ω–æ—ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó


def update_price_list():
    """–°—Ç–æ—Ä—ñ–Ω–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞"""
    # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    if not st.session_state.get("authenticated", False):
        st.error("‚ùå –ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏")
        st.stop()
    
    st.title("üìù –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞")
    st.write("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –Ω–æ–≤–∏–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç—ñ PDF")

    uploaded_file = st.file_uploader("–í–∏–±–µ—Ä—ñ—Ç—å PDF-—Ñ–∞–π–ª", type=["pdf"])
    if uploaded_file is not None:
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –∫–æ–ø—ñ—é –ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
        price_list_path = "data/–ü—Ä–∞–π—Å –ë–µ—Ä–µ–∑–µ–Ω—å 2025.pdf"
        backup_path = f"data/backup_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"

        try:
            # –Ø–∫—â–æ —ñ—Å–Ω—É—î —Å—Ç–∞—Ä–∏–π —Ñ–∞–π–ª, —Ä–æ–±–∏–º–æ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é
            if os.path.exists(price_list_path):
                shutil.copy2(price_list_path, backup_path)
                st.info(f"–°—Ç–≤–æ—Ä–µ–Ω–æ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é: {backup_path}")

            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π —Ñ–∞–π–ª
            with open(price_list_path, "wb") as f:
                f.write(uploaded_file.getbuffer())

            st.success("‚úÖ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")

            # –ü—Ä–æ–ø–æ–Ω—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ –≤–µ–∫—Ç–æ—Ä–Ω—É –±–∞–∑—É
            if st.button("–û–Ω–æ–≤–∏—Ç–∏ –≤–µ–∫—Ç–æ—Ä–Ω—É –±–∞–∑—É –¥–∞–Ω–∏—Ö"):
                with st.spinner("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–µ–∫—Ç–æ—Ä–Ω–æ—ó –±–∞–∑–∏..."):
                    build_vector_store()
                st.success("‚úÖ –í–µ–∫—Ç–æ—Ä–Ω—É –±–∞–∑—É —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!")
        except Exception as e:
            st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞: {e}")

    # –ü–æ–∫–∞–∑—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π
    st.subheader("–†–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞")
    backup_files = [f for f in os.listdir("data") if f.startswith("backup_") and f.endswith(".pdf")]

    if backup_files:
        for backup in sorted(backup_files, reverse=True):
            col1, col2 = st.columns([3, 1])
            with col1:
                st.write(f"üìÑ {backup}")
            with col2:
                if st.button("–í—ñ–¥–Ω–æ–≤–∏—Ç–∏", key=f"restore_{backup}"):
                    price_list_path = "data/–ü—Ä–∞–π—Å –ë–µ—Ä–µ–∑–µ–Ω—å 2025.pdf"
                    backup_path = f"data/{backup}"
                    shutil.copy2(backup_path, price_list_path)
                    st.success(f"‚úÖ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –∑ {backup}")
                    st.rerun()
    else:
        st.info("–†–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")


def view_statistics():
    """–°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–µ—Ä–µ–≥–ª—è–¥—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    if not st.session_state.get("authenticated", False):
        st.error("‚ùå –ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏")
        st.stop()
    
    st.title("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Ç—ñ–≤")

    # –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_stats()

    # –ü–æ–∫–∞–∑—É—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3 = st.columns(3)

    with col1:
        st.metric("–£—Å—å–æ–≥–æ –∑–∞–ø–∏—Ç—ñ–≤", stats["total_queries"])

    with col2:
        st.metric("–£–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤", stats["unique_queries"])

    with col3:
        st.metric("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", stats["users"])

    # –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –∑–∞–ø–∏—Ç–∏
    st.subheader("–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –∑–∞–ø–∏—Ç–∏")

    top_queries = get_top_queries(20)
    if top_queries:
        df_top = pd.DataFrame(top_queries)
        st.bar_chart(df_top.set_index("query")["count"])
        st.dataframe(df_top, use_container_width=True, hide_index=True)
    else:
        st.info("–ü–æ–∫–∏ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –∑–∞–ø–∏—Ç–∏")

    # –ü–æ–∫–∞–∑—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç–∏
    st.subheader("–û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç–∏")

    recent_queries = get_recent_queries(50)
    if recent_queries:
        df_recent = pd.DataFrame(recent_queries)
        df_recent["timestamp"] = pd.to_datetime(df_recent["timestamp"])
        df_recent = df_recent[["timestamp", "query", "username", "user_id", "source"]]
        st.dataframe(df_recent, use_container_width=True, hide_index=True)
    else:
        st.info("–ü–æ–∫–∏ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –∑–∞–ø–∏—Ç–∏")


def main():
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
    if "authenticated" not in st.session_state:
        st.session_state.authenticated = False
    
    if not st.session_state.authenticated:
        authenticate()
        return  # –ó—É–ø–∏–Ω—è—î–º–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, —è–∫—â–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π

    # –°—Ç–≤–æ—Ä—é—î–º–æ –±—ñ—á–Ω—É –ø–∞–Ω–µ–ª—å –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    st.sidebar.title("–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å")
    st.sidebar.subheader("–°–∞–ª–æ–Ω –∫—Ä–∞—Å–∏ ¬´ESTHEIQUE¬ª")
    st.sidebar.success("‚úÖ –í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä")

    # –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–µ –º–µ–Ω—é
    page = st.sidebar.radio(
        "–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:",
        ["–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞"]
    )

    # –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É
    if st.sidebar.button("–í–∏–π—Ç–∏", key="logout_button"):
        st.session_state.authenticated = False
        st.sidebar.success("–í–∏ –≤–∏–π—à–ª–∏ –∑ —Å–∏—Å—Ç–µ–º–∏")
        st.rerun()

    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ–±—Ä–∞–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    if page == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        view_statistics()
    elif page == "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞":
        update_price_list()


if __name__ == "__main__":
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ —ñ—Å–Ω—É—é—Ç—å
    os.makedirs("data", exist_ok=True)

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
    main()
